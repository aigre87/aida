// @import "other/sprite";

/*  fonts
PFAgoraSlabPro
PFDinDisplayPro
PFDinTextCondPro
 */
@import "other/mixins";

$lcW : 325px;
$lcW1024 : 225px;
$lcW760 : 155px;

html{
	height: 100%;
}
body{
	color: map-get($colors, text);
	height: 100%;
}
a{
	color: map-get($colors, text);
	text-decoration: none;
}
div{
	box-sizing: border-box;
}
#mainWrapper{
	width: 100%;
	display: flex;
	min-width: 320px;
	min-height: 100%;
}

#mobile #leftCol .iw{
  overflow-y: scroll;
}
#leftCol{
	position: relative;
	width: $lcW;
	@include respond-to(s1024) { 
		width: $lcW1024;	
	}
	@include respond-to(s760) { 
		width: $lcW760;
	}
	@include respond-to(s610) { 
		
	}
	@include respond-to(s320) { 
		width: 0;
	}
	.iw{
    position: fixed;
    width: $lcW;
    height: 100%;
    overflow: hidden;
    @include respond-to(s1024) { 
    	width: $lcW1024;
    }
    @include respond-to(s760) { 
    	width: 100%;
    	height: 100%;
    	background: #fff;
    	overflow: visible !important;
    	position: absolute;
    	top: 0;
    	left: 0;
    	z-index: 1;
    }
    @include respond-to(s610) { 

    }
    @include respond-to(s320) { 

    }
	}
	.burgerMenuWrapper{
		display: none;
		@include respond-to(s760) {
			display: block;
			position: fixed;
			z-index: 20;
			perspective : 500;
			width: 56px;
			height: 80px;
			cursor: pointer;
			.burgerMenu{
				position: absolute;
				left: 8px;
				top: 20px;
				display: block;
				width: 40px;
				height: 40px;
				&.active{
					.hamburger-inner:before, .hamburger-inner:after{
						background: map-get($colors, text);
					}
				}
			}
		}
		@include respond-to(s320) { 
			position: absolute;
			height: 50px;
			.burgerMenu{
				top: 5px;
				left: 10px;
			}
		}
	}
	.person{
    padding: 39px 0 0 0;
		.title{
			font-size: 40px;
			line-height: 40px;
			font-weight: 700;
			font-family: "PFDinTextCondPro";
			text-transform: uppercase;
			letter-spacing: 3.5px;
			padding-left: 55px;
		}
		.desc{
			font-family: "PFAgoraSlabPro";
			font-weight: 300;
			font-size: 14px;
			line-height: 20px;
			text-transform: uppercase;
			letter-spacing: 8.5px;
			margin: 28px 0 0 54px;
		}
    @include respond-to(s1024) {
			.title{
				padding-left: 26px;
			}
			.desc{
				margin-left: 25px;
			}
    }
		@include respond-to(s760) {
			padding-top: 79px;
			position: fixed;
	    height: 100%;
	    z-index: 1;
	    background: #fff;
			.title{
				font-size: 30px;
				line-height: 30px;
		    letter-spacing: 2.8px;
		    padding-left: 15px;
			}
			.desc{
				margin-left: 14px;
		    letter-spacing: 5.6px;
		    margin-top: 5px;
			}
		}
		@include respond-to(s320) {
			padding-top: 51px;
    	height: auto;
	    z-index: 1;
	    background: transparent;
	    position: absolute;
			.title{
				font-size: 18px;
    		line-height: 18px;
    		letter-spacing: 1.8px;
			}
			.desc{
		    font-size: 12px;
    		letter-spacing: 2.5px;
    		margin-top: 0;
			}
		}
	}
	.leftContainer{
		background: #fff;
		//min-width: 320px;
		@include respond-to(s760) { 
			position: fixed;
			left: 0;
			top: 0;
			width: calc( 100vw - 155px );
			height: 100%;
			transform: translateX( calc( -100% + 155px ));
			transition: transform 0.3s ease;
			&.active{
				transform: translateX( calc( 155px ));
			}
		}
		@include respond-to(s320) {
			position: absolute;
			padding-top: 100px;
			width: calc( 100vw );
			transform: translateX( -100% );
			&.active{
				transform: translateX( 0% );
			}
		}
	}
	.icons{
		margin-top: 64px;
		display: flex;
		flex-wrap: wrap;
		padding: 0 20px;
		@include respond-to(s1024) { 
	    padding: 0 56px 0 0px;
	    max-width: 310px;
		}
		@include respond-to(s320) { 
			margin-top: 35px;
		}
		.iconW{
			display: block;
			width: 33.333%;
			position: relative;
			margin-bottom: 20px;
			@include respond-to(s1024) { 
				width: 50%;
			}
			&:hover{
				svg{
					fill: map-get($colors, purple);
				}
			}
			&:nth-child(3n+2){
				&:before, &:after{
					content: '';
					position: absolute;
					width: 1px;
					background: #e5e5e5;
					height: 20px;
					top: 50%;
					transform: translateY(-50%);
				}
				&:before{
					left: 0;
				}
				&:after{
					right: 0;
				}
			}
			@include respond-to(s1024) { 
				&:nth-child(n){
					&:before, &:after{
						display: none;
					}
				}
				&:nth-child(2n-1){
					&:after{
						display: block;
						content: '';
						position: absolute;
						width: 1px;
						background: #e5e5e5;
						height: 20px;
						top: 50%;
						transform: translateY(-50%);
						right: 0;
					}
				}
			}
			svg{
				display: block;
				margin: 0 auto;
				height: 40px;
				transition: fill 0.2s ease;
				// transform-origin: 50% 50%;
				// transform: scale(0.65);
				&.svgIcon-be{ width: 30px; }
				&.svgIcon-r{ width: 30px; }
				&.svgIcon-ss{ width: 30px; }
				&.svgIcon-tu{ width: 30px; }
				&.svgIcon-facebook{ width: 11px; }
				&.svgIcon-inst{ width: 28px; }
				&.svgIcon-m{ width: 30px; }
				&.svgIcon-in{ width: 22px; }
				&.svgIcon-d{ width: 20px; }
			}
		}
	}
	.contacts{
		font-family: "PFDinTextCondPro";
		font-size: 16px;
		line-height: 20px;
		font-weight: 500;
    margin-top: 55px;
    padding-left: 55px;
    letter-spacing: 1.6px;
    @include respond-to(s1024) { 
    	font-size: 14px;
    	letter-spacing: 1.4;
    	padding-left: 24px;
    }
	}
	.line{
    width: 160px;
    border-bottom: 1px dashed #000;
    margin-left: 56px;
    margin-top: 33px;
    margin-bottom: 40px;
    @include respond-to(s1024) { 
	    margin-top: 32px;
    	margin-bottom: 34px;
    	margin-left: 27px;
    }
	}
	.b{
		font-family: "PFDinTextCondPro";
		font-weight: 300;
		padding-left: 55px;
		margin-bottom: 30px;
		display: block;
		@include respond-to(s1024) { 
			padding-left: 26px;
		}
		.icon{
			display: block;
			float: left;
			position: relative;
			border-radius: 13px;
			border: 1px solid rgba(#080909, 0.18);
			width: 44px;
			height: 44px;
			transition: border 0.2s ease;
			@include respond-to(s1024) { 
				margin-top: 5px;
			}
			&:before, &:after{
				background: #000;
				width: 10px;
				height: 10px;
				border-radius: 100%;
				position: absolute;
				content: '';
				transform: translateY(-50%);
				top: 50%;
				transition: background 0.2s ease;
			}
			&:before{
				left: 9px;
			}
			&:after{
				right: 9px;
			}
		}
		.text{
			display: block;
	    margin-left: 59px;
	    padding-top: 4px;
	    line-height: 19px;
	    letter-spacing: 1.6px;
			font-size: 16px;
			line-height: 19px;
			@include respond-to(s1024) { 
				font-size: 14px;
				line-height: 17px;
				letter-spacing: 1.4px;
				padding-top: 0;
			}
		}
		&:hover{
			.icon{
				border-color: map-get($colors, purple);
				&:before, &:after{
					background: map-get($colors, purple);
				}
			}
		}
	}
}
#main{
	width: calc(100% - #{$lcW});
	background: #f3f3f3;
	@include respond-to(s1024) { 
		width: calc(100% - #{$lcW1024});
	}
	@include respond-to(s760) { 
		width: calc(100% - #{$lcW760});
	}
	@include respond-to(s320) { 
		width: 100%;
	}
}
#menu{
	padding: 39px 0 29px 240px;
  width: 920px;
  max-width: 100%;
  box-sizing: border-box;
	font-family: "PFDinDisplayPro";
	font-size: 0;
	@include respond-to(s320) { 
		width: calc(100% + 20px);
	}
	.item{
		display: inline-block;
		vertical-align: top;
		margin-right: 40px;
		margin-bottom: 16px;
		position: relative;
		cursor: pointer;
		transition: opacity 0.2s ease;
		span{
			font-weight: 700;
			font-size: 18px;
			line-height: 20px;
			letter-spacing: 2px;
		}
		sup{
			font-size: 12px;
			line-height: 12px;
			top: -4px;
			right: -11px;
			position: absolute;
			color: #888888;
			font-weight: 400;
		}
		&.inactive{
			opacity: 0.3;
		}
		&:hover{
			opacity: 1;
			color: map-get($colors, purple);
		}
		&.active{
			opacity: 1;
			&:hover{
				color: map-get($colors, text);
			}
		}
	}
	@include respond-to(s1600) { 
		padding-left: 210px;
	}
	@include respond-to(s1280) { 
		padding-left: 140px;
	}
	@include respond-to(s760) { 
		padding-left: 20px;
	}
	@include respond-to(s320) {
		padding-left: 125px;
		padding-top: 12px;
		.item{
			margin-right: 27px;
			margin-bottom: 5px;
			span{
				font-size: 14px;
				letter-spacing: 1.5px;
			}
			sup{
				font-size: 12px;
		    top: -5px;
  			right: -6px;
			}
		}
	}
}
#content{
	display: flex;
	padding: 0 85px;
	justify-content: space-between;
  flex-wrap: wrap;
  overflow: hidden;
  .emptyItemFix{
  	$w: calc((100% - 10%) * (1/3));
		$m: calc((100% - ((100% - 10%) * (1/3)) * 3) *(1/2));
		width: $w;
    height: 0;
    border: none;
    display: flex;
  }
	.item{
		$w: calc((100% - 10%) * (1/3));
		$m: calc((100% - ((100% - 10%) * (1/3)) * 3) *(1/2));
		width: $w;
		margin-bottom: $m;
	}
	@include respond-to(s1600) {
		padding: 0 195px 0 100px;
		.emptyItemFix{
			display: none;
		}
		.item{
			$w: calc((100% - 10%) * (1/2));
			$m: calc((100% - ((100% - 10%) * (1/2)) * 2));
			width: $w;
			margin-bottom: $m;
		}
	}
	@include respond-to(s1280) { 
		padding: 0 30px 0 25px;
		.item{
			$w: calc((100% - 2.33%) * (1/2));
			$m: calc((100% - ((100% - 2.33%) * (1/2)) * 2));
			width: $w;
			margin-bottom: $m;
		}
	}
	@include respond-to(s760) { 
		padding: 0 20px 0 20px;
	}
	@include respond-to(s610) { 
		padding: 0 15px 0 20px;
		.item{
			width: 100%;
			margin-bottom: 20px;
		}
	}
}

#content .item{
	font-family: "PFDinTextCondPro";
	text-transform: uppercase;
	display: none;
	&.inactive{
		display: none;
	}
	&:hover{
		text-decoration: none;
	}
	&.completeAnimation{
		.imgContainerIW{
			transition: transform 0.25s ease-in-out;
		}
	}
	&.completeAnimation:hover{
		.imgContainer{
			&:after{
				border-width: 7px;
			}
			.imgContainerIW{
				transform-origin: 50% 50%;
				transform: perspective(1px) translate3d( 0, 0, 0) scale(1.048);
			}
		}
	}
	.itemIW{
		display: block;
		width: 100%;
		background: #fff;
	}
	.imgContainer{
	 	filter: none; 
		-webkit-filter: blur(0px); 
		-moz-filter: blur(0px); 
		-ms-filter: blur(0px);
		filter:progid:DXImageTransform.Microsoft.Blur(PixelRadius='0');
		backface-visibility: hidden;
		height: 260px;
		overflow: hidden;
		display: block;
		background-color: map-get($colors, purple);
		border-color: map-get($colors, purple);
		position: relative;
		box-sizing: border-box;
		&:after{
			position: absolute;
			content: '';
			width: 100%;
			height: 100%;
			display: block;
			border-color: inherit;
			border-width: 0px;
			border-style: solid;
			transition: border 0.25s ease-in-out;
			box-sizing: border-box;
			z-index: 2;
		}
		.imgContainerIW{
			will-change : transform;
			 filter: none; 
			-webkit-filter: blur(0px); 
			-moz-filter: blur(0px); 
			-ms-filter: blur(0px);
			filter:progid:DXImageTransform.Microsoft.Blur(PixelRadius='0');
			backface-visibility: hidden;
			-webkit-backface-visibility: hidden; 
			transform: perspective(1px) translate3d( 0, 0, 0) scale(1);
			display: block;
			position: absolute;
			top: 0;
			right: 0;
			height: 100%;
			width: 100%;
	    background-size: cover;
	    background-position: center;
		}
	}
	.text{
		padding: 25px 24px 23px 24px;
		overflow: hidden;
		display: block;
		.object{
			color: map-get($colors, desc);
			font-weight: 500;
			font-size: 12px;
			line-height: 14px;
	    padding: 0 0 0 1px;
	    margin-bottom: 5px;
      letter-spacing: 2.3px;
      width: 100%;
      display: block;
		}
		.name{
			font-weight: 700;
			font-size: 28px;
			line-height: 28px;
	    padding: 0 0 0 1px;
      letter-spacing: 2.5px;
      width: 100%;
      display: block;
		}
		.desciption{
			font-weight: 500;
			font-size: 18px;
			line-height: 24px;
			margin-top: 2px;
			letter-spacing: 3px;
			width: 100%;
			display: block;
		}
	}
	@include respond-to(s760) {
		.text{
	    padding: 14px 24px 50px;
	    .object{
		    font-size: 10px;
		    line-height: 12px;
		    margin-bottom: 2px;
		    letter-spacing: 2px;
	    }
			.name{
		    font-size: 22px;
		    line-height: 24px;
		    letter-spacing: 2px;
			}
			.desciption{
		    font-size: 14px;
		    line-height: 18px;
		    margin-top: 1px;
		    letter-spacing: 2.5px;
			}
		}
	}
	@include respond-to(s320) {
		.imgContainer{
			height: 160px;
		}
		.text{
	    padding: 14px 15px 29px;
	    .object{
		    font-size: 10px;
		    line-height: 12px;
		    margin-bottom: 2px;
		    letter-spacing: 2px;
	    }
			.name{
		    font-size: 22px;
		    line-height: 24px;
		    letter-spacing: 2px;
			}
			.desciption{
		    font-size: 14px;
		    line-height: 18px;
		    margin-top: 1px;
		    letter-spacing: 2.5px;
			}
		}
	}
}
.nicescroll-rails-vr{
    display: block!important;
    @include respond-to(s760) {
    	display: none!important;
    }
 }



 /*humburger button*/
.hamburger{
	width: 100%;
	height: 100%;
}
.hamburger-box {
  width: 100%;
  height: 100%;
  display: block;
  position: relative; }

.hamburger-inner {
		will-change : transform;
    margin: auto;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0; 
  }
  .hamburger-inner, .hamburger-inner::before, .hamburger-inner::after {
  	will-change : transform;
    width: 31px;
    height: 4px;
    background-color: map-get($colors, text);
    border-radius: 0px;
    position: absolute;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-duration: 0.15s;
    transition-timing-function: ease; }
  .hamburger-inner::before, .hamburger-inner::after {
    content: "";
    display: block; }
  .hamburger-inner::before {
    top: -8px; }
  .hamburger-inner::after {
    bottom: -8px; }

.hamburger--3dy-r .hamburger-box {
  -webkit-perspective: 80px;
          perspective: 80px; }

.hamburger--3dy-r .hamburger-inner {
  transition: background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
  transition: transform 0.2s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
  transition: transform 0.2s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0.2s cubic-bezier(0.645, 0.045, 0.355, 1); }
  .hamburger--3dy-r .hamburger-inner::before, .hamburger--3dy-r .hamburger-inner::after {
    transition: -webkit-transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
    transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
    transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1); }

.hamburger--3dy-r.active .hamburger-inner {
  background-color: transparent;
  -webkit-transform: rotateX(180deg);
          transform: rotateX(180deg); }
  .hamburger--3dy-r.active .hamburger-inner::before {
    -webkit-transform: translate3d(0, 8px, 1px) rotate(45deg);
            transform: translate3d(0, 8px, 1px) rotate(45deg); }
  .hamburger--3dy-r.active .hamburger-inner::after {
    -webkit-transform: translate3d(0, -8px, 1px) rotate(-45deg);
            transform: translate3d(0, -8px, 1px) rotate(-45deg); }


.hamburger--3dy .hamburger-box {
  -webkit-perspective: 80px;
          perspective: 80px; }

.hamburger--3dy .hamburger-inner {
  transition: background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
  transition: transform 0.2s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
  transition: transform 0.2s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0.2s cubic-bezier(0.645, 0.045, 0.355, 1); }
  .hamburger--3dy .hamburger-inner::before, .hamburger--3dy .hamburger-inner::after {
    transition: -webkit-transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
    transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
    transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1); }

.hamburger--3dy.active .hamburger-inner {
  background-color: transparent;
  -webkit-transform: rotateX(-180deg);
          transform: rotateX(-180deg); }
  .hamburger--3dy.active .hamburger-inner::before {
    -webkit-transform: translate3d(0, 8px, 1px) rotate(45deg);
            transform: translate3d(0, 8px, 1px) rotate(45deg); }
  .hamburger--3dy.active .hamburger-inner::after {
    -webkit-transform: translate3d(0, -8px, 1px) rotate(-45deg);
            transform: translate3d(0, -8px, 1px) rotate(-45deg); }
/* END humburger button*/

@include respond-to(s760) { 
	#mobile #leftCol .leftContainer{
		overflow-y: scroll;
	}	
}